package common

// VolumeMount mount host dir int virtual machine dir
type VolumeMount struct {
	Host string `yaml:"host"`
	VM   string `yaml:"vm"`
}

// Network config for node in libvirt mode
type Network struct {
	Name           string `yaml:"name"`
	IP             string `yaml:"ip"`
	AttachedBridge string `yaml:"attached-bridge"`
}

// NodeConfig Config for each noed. "node" field  in config yaml
type NodeConfig struct {
	Name         string        `yaml:"name"`
	CPU          string        `yaml:"cpu"`
	MEM          string        `yaml:"mem"`
	DISK         string        `yaml:"disk"`
	VolumeMounts []VolumeMount `yaml:"mounts"`
	Network      Network       `yaml:"network"`
	DiskImage    string        `yaml:"disk-image"` // location of virtual disk
	CDROM        string        `yaml:"cd-rom"`     // .iso file
}

// Arg Argument
type Arg struct {
	Key   string `yaml:"key"`
	Value string `yaml:"value"`
}

// KubeInit Configuration for kubeadm init
type KubeInit struct {
	Args []Arg `yaml:"args"`
}

type Bridge struct {
	Name      string   `yaml:"name"`
	Alias     string   `yaml:"alias"`
	Inet      string   `yaml:"inet"`
	Broadcast string   `yaml:"broadcast"`
	Slaves    []string `yaml:"slaves"`
}

// OverallConfig Over-all configs
/*
This config is in same file with Template config, but when parsed,
the template part will be ignored.
*/
type OverallConfig struct {
	Backend         string       `yaml:"backend"`
	Bridge          Bridge       `yaml:"bridge"`
	NodeConfig      []NodeConfig `yaml:"nodes"`
	Image           string       `yaml:"image"`
	CloudInit       string       `yaml:"cloud-init"`
	KubeInit        KubeInit     `yaml:"kube-init"`
	TmpDir          string       `yaml:"tmp_dir"`            // Directory to store temp files generated by medium kube
	VMKubeConfigDir string       `yaml:"vm_kube_config_dir"` // path of kubeconfig in virtual machine
}

type KVMDomainConfig struct {
}
