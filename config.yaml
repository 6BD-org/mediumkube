# Backend can be multipass or libvirt
backend: "libvirt"

bridge:
  name: "mediumkube-br0"
  inet: 10.114.114.1/24

overlay:
  id: "node01" # Id of current node. Must be unique across a cluster
  enabled: true # If overlay is disabled, there would be no etcd or flannel service
  master: 127.0.0.1 # master node ip. Must be accessable from all other nodes
  etcd-port: 6872 # simplified config. Avoid loops
  grpc-port: 6874 # port of mediumkube grpc service
  cidr: 10.114.114.0/24
  dns-etcd-prefix: "/xmbsmdsj.co.uk/dns"
  lease-etcd-prefix: "/xmbsmdsj.co.uk/lease"
  domain-etcd-prefix: "/xmbsmdsj.co.uk/domain"
  dlock-etcd-prefix: "/xmbsmdsj.co.uk/lock"
  flannel:
    network: 10.114.114.0/16
    etcd-prefix: "/xmbsmdsj.co.uk/network"
    iface: "mediumkube-flannel0" # 
    backend: "vxlan"

http-proxy: "http://10.114.114.1:1091"
https-proxy: "http://10.114.114.1:1091"
# It is suggested that you use multipass bridge network 
# in case of ip change

pub-key-dir: "/home/temp/.ssh/id_rsa.pub"
priv-key-dir: "/home/temp/.ssh/id_rsa"
host-pub-key-dir: "/home/temp/.ssh/id_rsa.pub"
host-priv-key-dir: "/home/temp/.ssh/id_rsa"

image: "/home/temp/bionic.img"
cloud-init: "/etc/mediumkube/cloud-init.yaml"

# see https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-init/
# see https://coreos.com/flannel/docs/latest/kubernetes.html for Flannel guides
kube-init:
  args:
    - key: "ignore-preflight-errors"
      value: "control-plane-prepare"
    - key: "pod-network-cidr"
      value: "10.244.0.0/16"

# MediumKube configs

tmp_dir: /home/temp/mediumkube

# Kubeconfig inside the virtual machine
# For kubernetes client
vm_kube_config_dir: /home/ubuntu/.kube/config
vm_log_dir: /var/log/bootstrap
